# roles/k3s_dev_environment/tasks/04_install_buildkit.yml
- name: Check if buildkitd is installed
  ansible.builtin.stat:
    path: "{{ k3s_dev_environment_local_bin_path }}/buildkitd"
  register: buildkitd_stat

- name: Create BuildKit group {{ k3s_dev_environment_buildkit_group }}
  ansible.builtin.group:
    name: "{{ k3s_dev_environment_buildkit_group }}"
    system: true
    state: present

- name: Create BuildKit user {{ k3s_dev_environment_buildkit_user }}
  ansible.builtin.user:
    name: "{{ k3s_dev_environment_buildkit_user }}"
    group: "{{ k3s_dev_environment_buildkit_group }}"
    system: true
    shell: /sbin/nologin
    home: "{{ k3s_dev_environment_buildkit_data_dir }}"
    create_home: true # Creates home dir if it doesn't exist
  when: not buildkitd_stat.stat.exists or ansible_check_mode # Only if not installed

- name: Download and install BuildKit {{ k3s_dev_environment_buildkit_version }}
  when: not buildkitd_stat.stat.exists or ansible_check_mode
  block:
    - name: Download BuildKit archive
      ansible.builtin.get_url:
        url: "https://github.com/moby/buildkit/releases/download/{{ k3s_dev_environment_buildkit_version }}/buildkit-{{ k3s_dev_environment_buildkit_version }}.linux-amd64.tar.gz"
        dest: "/tmp/buildkit-{{ k3s_dev_environment_buildkit_version }}.linux-amd64.tar.gz"
        mode: '0644'
      register: buildkit_archive_download
    - name: Create temporary directory for BuildKit extraction
      ansible.builtin.file:
        path: "/tmp/buildkit-extract"
        state: directory
        mode: '0755'
      when: buildkit_archive_download is successful and buildkit_archive_download.changed
    - name: Extract BuildKit archive
      ansible.builtin.unarchive:
        src: "{{ buildkit_archive_download.dest }}"
        dest: "/tmp/buildkit-extract" # Extracts to a 'bin' subdirectory
        remote_src: true
      when: buildkit_archive_download is successful and buildkit_archive_download.changed
      register: buildkit_extract_status
    - name: Move buildkitd and buildctl to {{ k3s_dev_environment_local_bin_path }}
      ansible.builtin.copy:
        src: "/tmp/buildkit-extract/bin/{{ item }}"
        dest: "{{ k3s_dev_environment_local_bin_path }}/{{ item }}"
        mode: '0755'
        remote_src: true
      loop:
        - buildkitd
        - buildctl
      when: buildkit_extract_status is successful and buildkit_extract_status.changed
    - name: Clean up BuildKit downloads and extraction
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ buildkit_archive_download.dest }}"
        - "/tmp/buildkit-extract"
      when: item is defined and item != ""

- name: Ensure BuildKit data directory exists and has correct permissions
  ansible.builtin.file:
    path: "{{ k3s_dev_environment_buildkit_data_dir }}"
    state: directory
    owner: "{{ k3s_dev_environment_buildkit_user }}"
    group: "{{ k3s_dev_environment_buildkit_group }}"
    mode: '0750'

- name: Template BuildKit systemd service file
  ansible.builtin.template:
    src: buildkitd.service.j2
    dest: /etc/systemd/system/buildkitd.service
    owner: root
    group: root
    mode: '0644'
  notify: Reload systemd and restart buildkitd

- name: Ensure BuildKit service is enabled and started
  ansible.builtin.systemd_service:
    name: buildkitd
    enabled: true
    state: started
    daemon_reload: true # Ensure this happens if unit file changed via notify

- name: Add {{ k3s_dev_environment_dev_user }} to the {{ k3s_dev_environment_buildkit_group }} group for socket access
  ansible.builtin.user:
    name: "{{ k3s_dev_environment_dev_user }}"
    groups: "{{ k3s_dev_environment_buildkit_group }}"
    append: true
  notify: UserReloginNeeded

- name: Set BUILDKIT_HOST for {{ k3s_dev_environment_dev_user }} in .bashrc
  ansible.builtin.lineinfile:
    path: "/home/{{ k3s_dev_environment_dev_user }}/.bashrc"
    line: "export BUILDKIT_HOST={{ k3s_dev_environment_buildkit_socket_path }}"
    regexp: "^export BUILDKIT_HOST="
    create: true
    owner: "{{ k3s_dev_environment_dev_user }}"
    group: "{{ k3s_dev_environment_dev_user }}"
    mode: '0644'
  notify: UserReloginNeeded
